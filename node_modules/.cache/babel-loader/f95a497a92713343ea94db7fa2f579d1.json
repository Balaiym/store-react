{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { AlertType } from '../types/common';\nimport { handleObj } from '../utils/helpers';\nimport { CREATE_PRODUCT_ERROR_MESSAGE, DELETE_PRODUCT_ERROR_MESSAGE, FETCH_PRODUCTS_ERROR_MESSAGE, UPDATE_PRODUCT_ERROR_MESSAGE } from '../constants/messages';\nimport { fetchBrands } from './BrandSlice';\nimport { fetchCategories } from './CategorySlice';\nimport { showAlert } from './CommonSlice';\nimport MOCKED_PRODUCTS from '../mocks/products.json';\nconst initialState = {\n  products: [],\n  selectedProduct: {\n    id: '',\n    category: {\n      id: '',\n      name: '',\n      url: ''\n    },\n    description: '',\n    image: '',\n    name: '',\n    price: 0,\n    weight: 0,\n    brand: {\n      id: '',\n      name: ''\n    },\n    gender: {\n      name: '',\n      id: '',\n      url: ''\n    }\n  },\n  isLoading: false,\n  error: {\n    isError: false,\n    message: ''\n  }\n};\nconst BASE_URL = 'https://e-commerce-65446-default-rtdb.firebaseio.com';\nexport const fetchProducts = createAsyncThunk('product/fetchProducts', async (_, _ref) => {\n  var _products;\n\n  let {\n    getState,\n    dispatch,\n    rejectWithValue\n  } = _ref;\n  await Promise.all([dispatch(fetchBrands()), dispatch(fetchCategories())]);\n  const response = await fetch(`${BASE_URL}/products.json`);\n\n  if (!response.ok) {\n    dispatch(showAlert({\n      type: AlertType.Error,\n      message: FETCH_PRODUCTS_ERROR_MESSAGE\n    }));\n    return rejectWithValue(FETCH_PRODUCTS_ERROR_MESSAGE);\n  }\n\n  let products = [];\n  const data = await response.json();\n  products = handleObj(data);\n\n  if (!products || ((_products = products) === null || _products === void 0 ? void 0 : _products.length) === 0) {\n    products = handleObj(MOCKED_PRODUCTS);\n  }\n\n  const {\n    brand: {\n      brands\n    },\n    category: {\n      categories\n    }\n  } = getState();\n  const productsWithUpdatedBrandsAndCategories = products.map(product => {\n    const category = categories.find(category => category.id === product.category.id);\n    const brand = brands.find(brand => brand.id === product.brand.id);\n\n    if (!category && !brand) {\n      return product;\n    }\n\n    return { ...product,\n      category: { ...category,\n        name: category && category.name\n      },\n      brand: { ...brand,\n        name: brand && brand.name\n      }\n    };\n  });\n  return productsWithUpdatedBrandsAndCategories;\n});\nexport const createProduct = createAsyncThunk('product/createProduct', async (product, _ref2) => {\n  let {\n    dispatch,\n    rejectWithValue\n  } = _ref2;\n  const response = await fetch(`${BASE_URL}/products.json`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(product)\n  });\n\n  if (!response.ok) {\n    dispatch(showAlert({\n      type: AlertType.Error,\n      message: CREATE_PRODUCT_ERROR_MESSAGE\n    }));\n    return rejectWithValue(CREATE_PRODUCT_ERROR_MESSAGE);\n  }\n\n  const data = await response.json();\n  return {\n    id: data.name,\n    ...product\n  };\n});\nexport const updateProduct = createAsyncThunk('product/updateProduct', async (product, _ref3) => {\n  let {\n    dispatch,\n    rejectWithValue\n  } = _ref3;\n  const {\n    id,\n    category,\n    description,\n    discount,\n    image,\n    name,\n    brand,\n    price,\n    weight,\n    gender\n  } = product;\n  const response = await fetch(`${BASE_URL}/products/${id}.json`, {\n    method: 'PATCH',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      category,\n      description,\n      discount,\n      image,\n      name,\n      brand,\n      price,\n      weight,\n      gender\n    })\n  });\n\n  if (!response.ok) {\n    dispatch(showAlert({\n      type: AlertType.Error,\n      message: UPDATE_PRODUCT_ERROR_MESSAGE\n    }));\n    return rejectWithValue(UPDATE_PRODUCT_ERROR_MESSAGE);\n  }\n\n  const data = await response.json();\n  const updatedProduct = {\n    id,\n    ...data\n  };\n  return updatedProduct;\n});\nexport const deleteProduct = createAsyncThunk('product/deleteProduct', async (id, _ref4) => {\n  let {\n    dispatch,\n    rejectWithValue\n  } = _ref4;\n  const response = await fetch(`${BASE_URL}/products/${id}.json`, {\n    method: 'DELETE',\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n\n  if (!response.ok) {\n    dispatch(showAlert({\n      type: AlertType.Error,\n      message: DELETE_PRODUCT_ERROR_MESSAGE\n    }));\n    return rejectWithValue(DELETE_PRODUCT_ERROR_MESSAGE);\n  }\n\n  return id;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    selectProduct: (state, action) => {\n      const product = state.products.find(product => product.id === action.payload);\n      if (!product) return;\n      state.selectedProduct = product;\n    },\n    removeSelectedProduct: state => {\n      state.selectedProduct = initialState.selectedProduct;\n    },\n    updateAllProductsBrands: (state, action) => {\n      state.products = state.products.map(product => {\n        if (product.brand.id === action.payload.id) {\n          return { ...product,\n            brand: action.payload\n          };\n        }\n\n        return product;\n      });\n    },\n    updateAllProductsCategories: (state, action) => {\n      state.products = state.products.map(product => {\n        if (product.category.id === action.payload.id) {\n          return { ...product,\n            category: action.payload\n          };\n        }\n\n        return product;\n      });\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchProducts.fulfilled, (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.products = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(fetchProducts.rejected, (state, _ref6) => {\n      let {\n        payload\n      } = _ref6;\n      state.error = {\n        isError: true,\n        message: payload\n      };\n      state.isLoading = false;\n    });\n    builder.addCase(createProduct.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(createProduct.fulfilled, (state, _ref7) => {\n      let {\n        payload\n      } = _ref7;\n      state.products.push(payload);\n      state.isLoading = false;\n    });\n    builder.addCase(createProduct.rejected, (state, _ref8) => {\n      let {\n        payload\n      } = _ref8;\n      state.error = {\n        isError: true,\n        message: payload\n      };\n      state.isLoading = false;\n    });\n    builder.addCase(updateProduct.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(updateProduct.fulfilled, (state, _ref9) => {\n      let {\n        payload\n      } = _ref9;\n      const index = state.products.findIndex(product => product.id === payload.id);\n      if (index < 0) return;\n      state.products[index] = payload;\n      state.isLoading = false;\n    });\n    builder.addCase(updateProduct.rejected, (state, _ref10) => {\n      let {\n        payload\n      } = _ref10;\n      state.error = {\n        isError: true,\n        message: payload\n      };\n      state.isLoading = false;\n    });\n    builder.addCase(deleteProduct.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(deleteProduct.fulfilled, (state, _ref11) => {\n      let {\n        payload\n      } = _ref11;\n      const index = state.products.findIndex(product => product.id === payload);\n      state.products.splice(index, 1);\n      state.isLoading = false;\n    });\n    builder.addCase(deleteProduct.rejected, (state, _ref12) => {\n      let {\n        payload\n      } = _ref12;\n      state.error = {\n        isError: true,\n        message: payload\n      };\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  selectProduct,\n  removeSelectedProduct,\n  updateAllProductsCategories,\n  updateAllProductsBrands\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","AlertType","handleObj","CREATE_PRODUCT_ERROR_MESSAGE","DELETE_PRODUCT_ERROR_MESSAGE","FETCH_PRODUCTS_ERROR_MESSAGE","UPDATE_PRODUCT_ERROR_MESSAGE","fetchBrands","fetchCategories","showAlert","MOCKED_PRODUCTS","initialState","products","selectedProduct","id","category","name","url","description","image","price","weight","brand","gender","isLoading","error","isError","message","BASE_URL","fetchProducts","_","getState","dispatch","rejectWithValue","Promise","all","response","fetch","ok","type","Error","data","json","length","brands","categories","productsWithUpdatedBrandsAndCategories","map","product","find","createProduct","method","headers","body","JSON","stringify","updateProduct","discount","updatedProduct","deleteProduct","productSlice","reducers","selectProduct","state","action","payload","removeSelectedProduct","updateAllProductsBrands","updateAllProductsCategories","extraReducers","builder","addCase","pending","fulfilled","rejected","push","index","findIndex","splice","actions","reducer"],"sources":["C:/Users/Acer/Desktop/e-commerce-react-app-master/src/store/ProductSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { AlertType, Error, Product } from '../types/common';\nimport { handleObj } from '../utils/helpers';\nimport { RootState } from './store';\nimport {\n  CREATE_PRODUCT_ERROR_MESSAGE,\n  DELETE_PRODUCT_ERROR_MESSAGE,\n  FETCH_PRODUCTS_ERROR_MESSAGE,\n  UPDATE_PRODUCT_ERROR_MESSAGE,\n} from '../constants/messages';\nimport { fetchBrands } from './BrandSlice';\nimport { fetchCategories } from './CategorySlice';\nimport { showAlert } from './CommonSlice';\nimport MOCKED_PRODUCTS from '../mocks/products.json';\n\nexport type ProductState = {\n  products: Product[];\n  selectedProduct: Product;\n  isLoading: boolean;\n  error: Error;\n};\n\nconst initialState: ProductState = {\n  products: [],\n  selectedProduct: {\n    id: '',\n    category: {\n      id: '',\n      name: '',\n      url: '',\n    },\n    description: '',\n    image: '',\n    name: '',\n    price: 0,\n    weight: 0,\n    brand: {\n      id: '',\n      name: '',\n    },\n    gender: {\n      name: '',\n      id: '',\n      url: '',\n    },\n  },\n  isLoading: false,\n  error: {\n    isError: false,\n    message: '',\n  },\n};\n\nconst BASE_URL = 'https://e-commerce-65446-default-rtdb.firebaseio.com';\n\nexport const fetchProducts = createAsyncThunk<Product[], void, { state: RootState }>(\n  'product/fetchProducts',\n  async (_, { getState, dispatch, rejectWithValue }) => {\n    await Promise.all([dispatch(fetchBrands()), dispatch(fetchCategories())]);\n\n    const response = await fetch(`${BASE_URL}/products.json`);\n\n    if (!response.ok) {\n      dispatch(showAlert({ type: AlertType.Error, message: FETCH_PRODUCTS_ERROR_MESSAGE }));\n      return rejectWithValue(FETCH_PRODUCTS_ERROR_MESSAGE);\n    }\n\n    let products: Product[] = [];\n    const data = await response.json();\n    products = handleObj(data);\n    if (!products || products?.length === 0) {\n      products = handleObj(MOCKED_PRODUCTS);\n    }\n\n    const {\n      brand: { brands },\n      category: { categories },\n    } = getState();\n\n    const productsWithUpdatedBrandsAndCategories = products.map((product) => {\n      const category = categories.find((category) => category.id === product.category.id);\n      const brand = brands.find((brand) => brand.id === product.brand.id);\n\n      if (!category && !brand) {\n        return product;\n      }\n\n      return {\n        ...product,\n        category: {\n          ...category,\n          name: category && category.name,\n        },\n        brand: {\n          ...brand,\n          name: brand && brand.name,\n        },\n      };\n    }) as Product[];\n\n    return productsWithUpdatedBrandsAndCategories;\n  }\n);\n\nexport const createProduct = createAsyncThunk(\n  'product/createProduct',\n  async (product: Partial<Product>, { dispatch, rejectWithValue }) => {\n    const response = await fetch(`${BASE_URL}/products.json`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(product),\n    });\n\n    if (!response.ok) {\n      dispatch(showAlert({ type: AlertType.Error, message: CREATE_PRODUCT_ERROR_MESSAGE }));\n      return rejectWithValue(CREATE_PRODUCT_ERROR_MESSAGE);\n    }\n\n    const data: { name: string } = await response.json();\n\n    return { id: data.name, ...product } as Product;\n  }\n);\n\nexport const updateProduct = createAsyncThunk(\n  'product/updateProduct',\n  async (product: Product, { dispatch, rejectWithValue }) => {\n    const { id, category, description, discount, image, name, brand, price, weight, gender } = product;\n    const response = await fetch(`${BASE_URL}/products/${id}.json`, {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        category,\n        description,\n        discount,\n        image,\n        name,\n        brand,\n        price,\n        weight,\n        gender,\n      }),\n    });\n\n    if (!response.ok) {\n      dispatch(showAlert({ type: AlertType.Error, message: UPDATE_PRODUCT_ERROR_MESSAGE }));\n      return rejectWithValue(UPDATE_PRODUCT_ERROR_MESSAGE);\n    }\n\n    const data = await response.json();\n\n    const updatedProduct: Product = {\n      id,\n      ...data,\n    };\n\n    return updatedProduct;\n  }\n);\n\nexport const deleteProduct = createAsyncThunk(\n  'product/deleteProduct',\n  async (id: Product['id'], { dispatch, rejectWithValue }) => {\n    const response = await fetch(`${BASE_URL}/products/${id}.json`, {\n      method: 'DELETE',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      dispatch(showAlert({ type: AlertType.Error, message: DELETE_PRODUCT_ERROR_MESSAGE }));\n      return rejectWithValue(DELETE_PRODUCT_ERROR_MESSAGE);\n    }\n\n    return id;\n  }\n);\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    selectProduct: (state, action: PayloadAction<Product['id']>) => {\n      const product = state.products.find((product) => product.id === action.payload);\n\n      if (!product) return;\n\n      state.selectedProduct = product;\n    },\n\n    removeSelectedProduct: (state) => {\n      state.selectedProduct = initialState.selectedProduct;\n    },\n\n    updateAllProductsBrands: (state, action: PayloadAction<Product['brand']>) => {\n      state.products = state.products.map((product) => {\n        if (product.brand.id === action.payload.id) {\n          return {\n            ...product,\n            brand: action.payload,\n          };\n        }\n        return product;\n      });\n    },\n\n    updateAllProductsCategories: (state, action: PayloadAction<Product['category']>) => {\n      state.products = state.products.map((product) => {\n        if (product.category.id === action.payload.id) {\n          return {\n            ...product,\n            category: action.payload,\n          };\n        }\n        return product;\n      });\n    },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(fetchProducts.pending, (state) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(fetchProducts.fulfilled, (state, { payload }) => {\n      state.products = payload;\n      state.isLoading = false;\n    });\n\n    builder.addCase(fetchProducts.rejected, (state, { payload }) => {\n      state.error = {\n        isError: true,\n        message: payload as Error['message'],\n      };\n\n      state.isLoading = false;\n    });\n\n    builder.addCase(createProduct.pending, (state) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(createProduct.fulfilled, (state, { payload }) => {\n      state.products.push(payload);\n      state.isLoading = false;\n    });\n\n    builder.addCase(createProduct.rejected, (state, { payload }) => {\n      state.error = {\n        isError: true,\n        message: payload as Error['message'],\n      };\n      state.isLoading = false;\n    });\n\n    builder.addCase(updateProduct.pending, (state) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(updateProduct.fulfilled, (state, { payload }) => {\n      const index = state.products.findIndex((product) => product.id === payload.id);\n      if (index < 0) return;\n      state.products[index] = payload;\n      state.isLoading = false;\n    });\n\n    builder.addCase(updateProduct.rejected, (state, { payload }) => {\n      state.error = {\n        isError: true,\n        message: payload as Error['message'],\n      };\n      state.isLoading = false;\n    });\n\n    builder.addCase(deleteProduct.pending, (state) => {\n      state.isLoading = true;\n    });\n\n    builder.addCase(deleteProduct.fulfilled, (state, { payload }) => {\n      const index = state.products.findIndex((product) => product.id === payload);\n      state.products.splice(index, 1);\n      state.isLoading = false;\n    });\n\n    builder.addCase(deleteProduct.rejected, (state, { payload }) => {\n      state.error = {\n        isError: true,\n        message: payload as Error['message'],\n      };\n      state.isLoading = false;\n    });\n  },\n});\n\nexport const { selectProduct, removeSelectedProduct, updateAllProductsCategories, updateAllProductsBrands } =\n  productSlice.actions;\n\nexport default productSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}