{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst useFilterByBrand = (products, checkboxBrands) => {\n  _s();\n\n  const [checkedFilterItems, setCheckedFilterItems] = useState([]);\n  const {\n    url\n  } = useParams();\n  const checkboxItems = checkboxBrands.filter(brand => {\n    const product = products.some(product => product.brand.id === brand.id);\n\n    if (product) {\n      return brand;\n    }\n\n    return null;\n  });\n  useEffect(() => {\n    if (url) {\n      setCheckedFilterItems([]);\n    }\n  }, [url]);\n\n  const checkFilterItem = id => {\n    if (checkedFilterItems.includes(id)) {\n      const checkedItems = checkedFilterItems.filter(item => item !== id);\n      setCheckedFilterItems(checkedItems);\n      return;\n    }\n\n    setCheckedFilterItems(prev => [...prev, id]);\n  };\n\n  const productsTorender = checkedFilterItems.length > 0 ? products.filter(product => checkedFilterItems.includes(product.brand.id)) : products;\n  return {\n    checkFilterItem,\n    productsTorender,\n    checkboxItems\n  };\n};\n\n_s(useFilterByBrand, \"y73FrCRtstO15vPgyydAXhGiAvU=\", false, function () {\n  return [useParams];\n});\n\nexport default useFilterByBrand;","map":{"version":3,"names":["useEffect","useState","useParams","useFilterByBrand","products","checkboxBrands","checkedFilterItems","setCheckedFilterItems","url","checkboxItems","filter","brand","product","some","id","checkFilterItem","includes","checkedItems","item","prev","productsTorender","length"],"sources":["C:/Users/Acer/Desktop/e-commerce-react-app-master/src/hooks/useFilterByBrand.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Product } from '../types/common';\n\nconst useFilterByBrand = (products: Product[], checkboxBrands: any[]) => {\n  const [checkedFilterItems, setCheckedFilterItems] = useState<string[]>([]);\n  const { url } = useParams();\n\n  const checkboxItems = checkboxBrands.filter((brand) => {\n    const product = products.some((product) => product.brand.id === brand.id);\n    if (product) {\n      return brand;\n    }\n    return null;\n  });\n\n  useEffect(() => {\n    if (url) {\n      setCheckedFilterItems([]);\n    }\n  }, [url]);\n\n  const checkFilterItem = (id: string) => {\n    if (checkedFilterItems.includes(id)) {\n      const checkedItems = checkedFilterItems.filter((item) => item !== id);\n\n      setCheckedFilterItems(checkedItems);\n      return;\n    }\n\n    setCheckedFilterItems((prev) => [...prev, id]);\n  };\n\n  const productsTorender =\n    checkedFilterItems.length > 0\n      ? products.filter((product) => checkedFilterItems.includes(product.brand.id))\n      : products;\n\n  return {\n    checkFilterItem,\n    productsTorender,\n    checkboxItems,\n  };\n};\n\nexport default useFilterByBrand;\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAGA,MAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAsBC,cAAtB,KAAgD;EAAA;;EACvE,MAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAW,EAAX,CAA5D;EACA,MAAM;IAAEO;EAAF,IAAUN,SAAS,EAAzB;EAEA,MAAMO,aAAa,GAAGJ,cAAc,CAACK,MAAf,CAAuBC,KAAD,IAAW;IACrD,MAAMC,OAAO,GAAGR,QAAQ,CAACS,IAAT,CAAeD,OAAD,IAAaA,OAAO,CAACD,KAAR,CAAcG,EAAd,KAAqBH,KAAK,CAACG,EAAtD,CAAhB;;IACA,IAAIF,OAAJ,EAAa;MACX,OAAOD,KAAP;IACD;;IACD,OAAO,IAAP;EACD,CANqB,CAAtB;EAQAX,SAAS,CAAC,MAAM;IACd,IAAIQ,GAAJ,EAAS;MACPD,qBAAqB,CAAC,EAAD,CAArB;IACD;EACF,CAJQ,EAIN,CAACC,GAAD,CAJM,CAAT;;EAMA,MAAMO,eAAe,GAAID,EAAD,IAAgB;IACtC,IAAIR,kBAAkB,CAACU,QAAnB,CAA4BF,EAA5B,CAAJ,EAAqC;MACnC,MAAMG,YAAY,GAAGX,kBAAkB,CAACI,MAAnB,CAA2BQ,IAAD,IAAUA,IAAI,KAAKJ,EAA7C,CAArB;MAEAP,qBAAqB,CAACU,YAAD,CAArB;MACA;IACD;;IAEDV,qBAAqB,CAAEY,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUL,EAAV,CAAX,CAArB;EACD,CATD;;EAWA,MAAMM,gBAAgB,GACpBd,kBAAkB,CAACe,MAAnB,GAA4B,CAA5B,GACIjB,QAAQ,CAACM,MAAT,CAAiBE,OAAD,IAAaN,kBAAkB,CAACU,QAAnB,CAA4BJ,OAAO,CAACD,KAAR,CAAcG,EAA1C,CAA7B,CADJ,GAEIV,QAHN;EAKA,OAAO;IACLW,eADK;IAELK,gBAFK;IAGLX;EAHK,CAAP;AAKD,CAvCD;;GAAMN,gB;UAEYD,S;;;AAuClB,eAAeC,gBAAf"},"metadata":{},"sourceType":"module"}