{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\e-commerce-react-app-master\\\\src\\\\components\\\\admin\\\\Brands\\\\Brands.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classes from './Brands.module.css';\nimport Placeholder from '../../UI/Placeholder/Placeholder';\nimport SettingsForm from '../SettingsForm/SettingsForm';\nimport useForm from '../../../hooks/useForm';\nimport SettingsList from '../SettingsList/SettingsList';\nimport { AlertType } from '../../../types/common';\nimport Card from '../../UI/Card/Card';\nimport { createBrand, deleteBrand, removeSelectedBrand, selectBrand, updateBrand } from '../../../store/BrandSlice';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport AddIcon from '../../UI/icons/AddIcon/AddIcon';\nimport { showAlert } from '../../../store/CommonSlice';\nimport { DELETE_BRAND_ALERT_MESSAGE, NO_BRANDS_MESSAGE } from '../../../constants/messages';\nimport AreaLoader from '../../UI/AreaLoader/AreaLoader';\nimport { updateAllProductsBrands } from '../../../store/ProductSlice';\nimport { brandFormValidator } from '../../../utils/validators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INIT_INPUT = {\n  name: '',\n  description: '',\n  url: ''\n};\n\nconst Brands = () => {\n  _s();\n\n  const {\n    isLoading,\n    brands,\n    error\n  } = useSelector(state => state.brand);\n  const {\n    products\n  } = useSelector(state => state.product);\n  const brandToBeEdited = useSelector(state => state.brand.selectedBrand);\n  const dispatch = useDispatch();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const {\n    input,\n    setInput,\n    handleChange,\n    errors,\n    submit,\n    resetForm\n  } = useForm(INIT_INPUT, handleSubmit, brandFormValidator);\n  const isPlaceholderVisible = !isLoading && !error.isError && !isFormOpen && (brands === null || brands === void 0 ? void 0 : brands.length) === 0;\n  const modifedBrands = brands.map(brand => {\n    const productCount = products.filter(product => product.brand.id === brand.id).length;\n    const discountedProductsCount = products.filter(product => product.brand.id === brand.id && product.discount).length;\n    return { ...brand,\n      productsCount: productCount,\n      discountedProductsCount\n    };\n  });\n  useEffect(() => {\n    if (!brandToBeEdited.id) return;\n    setInput(prev => ({ ...prev,\n      ...brandToBeEdited\n    }));\n  }, [brandToBeEdited, setInput]);\n\n  function handleSubmit() {\n    const name = input.name.trim();\n    const description = input.description.trim();\n\n    if (brandToBeEdited.id) {\n      const updatedBrand = { ...brandToBeEdited,\n        ...input\n      };\n      dispatch(updateAllProductsBrands(updatedBrand));\n      dispatch(updateBrand(updatedBrand));\n    } else {\n      const newBrand = {\n        name,\n        description\n      };\n      dispatch(createBrand(newBrand));\n    }\n\n    closeForm();\n  }\n\n  const openForm = () => {\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n    dispatch(removeSelectedBrand());\n    resetForm();\n  };\n\n  const deleteBrandHendler = async id => {\n    const hasProducts = modifedBrands.some(brand => brand.id === id && brand.productsCount > 0);\n\n    if (hasProducts) {\n      dispatch(showAlert({\n        type: AlertType.Error,\n        message: DELETE_BRAND_ALERT_MESSAGE\n      }));\n      return;\n    }\n\n    dispatch(deleteBrand(id));\n  };\n\n  const editBrandHandler = id => {\n    dispatch(selectBrand(id));\n    openForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.brand,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: classes.title,\n          children: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: openForm,\n          isDisabled: isFormOpen || error.isError,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(AreaLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), !isLoading && error.isError && !isFormOpen && /*#__PURE__*/_jsxDEV(Placeholder, {\n        text: error.message,\n        size: '32px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 56\n      }, this), isPlaceholderVisible && !error.isError && /*#__PURE__*/_jsxDEV(Placeholder, {\n        text: NO_BRANDS_MESSAGE,\n        size: '32px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 52\n      }, this), isFormOpen && /*#__PURE__*/_jsxDEV(SettingsForm, {\n        onClose: closeForm,\n        onChange: handleChange,\n        onSubmit: submit,\n        errors: errors,\n        value: input,\n        labelName: 'Название бренда',\n        labelURL: 'SEO URL',\n        namePlaceholder: 'Укажите название бренда',\n        descriptionPlaceholder: 'Описание бренда'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), !isFormOpen && (brands === null || brands === void 0 ? void 0 : brands.length) > 0 && /*#__PURE__*/_jsxDEV(SettingsList, {\n        items: modifedBrands,\n        onEdit: editBrandHandler,\n        onDelete: deleteBrandHendler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Brands, \"O0PcCjVkaGZu68/JbqUW64lbv+4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useForm];\n});\n\n_c = Brands;\nexport default Brands;\n\nvar _c;\n\n$RefreshReg$(_c, \"Brands\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","classes","Placeholder","SettingsForm","useForm","SettingsList","AlertType","Card","createBrand","deleteBrand","removeSelectedBrand","selectBrand","updateBrand","IconButton","AddIcon","showAlert","DELETE_BRAND_ALERT_MESSAGE","NO_BRANDS_MESSAGE","AreaLoader","updateAllProductsBrands","brandFormValidator","INIT_INPUT","name","description","url","Brands","isLoading","brands","error","state","brand","products","product","brandToBeEdited","selectedBrand","dispatch","isFormOpen","setIsFormOpen","input","setInput","handleChange","errors","submit","resetForm","handleSubmit","isPlaceholderVisible","isError","length","modifedBrands","map","productCount","filter","id","discountedProductsCount","discount","productsCount","prev","trim","updatedBrand","newBrand","closeForm","openForm","deleteBrandHendler","hasProducts","some","type","Error","message","editBrandHandler","header","title"],"sources":["C:/Users/Acer/Desktop/e-commerce-react-app-master/src/components/admin/Brands/Brands.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../../../store/store';\nimport classes from './Brands.module.css';\nimport Placeholder from '../../UI/Placeholder/Placeholder';\nimport SettingsForm from '../SettingsForm/SettingsForm';\nimport useForm from '../../../hooks/useForm';\nimport SettingsList from '../SettingsList/SettingsList';\nimport { AlertType, Brand } from '../../../types/common';\nimport Card from '../../UI/Card/Card';\nimport { createBrand, deleteBrand, removeSelectedBrand, selectBrand, updateBrand } from '../../../store/BrandSlice';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport AddIcon from '../../UI/icons/AddIcon/AddIcon';\nimport { showAlert } from '../../../store/CommonSlice';\nimport { DELETE_BRAND_ALERT_MESSAGE, NO_BRANDS_MESSAGE } from '../../../constants/messages';\nimport AreaLoader from '../../UI/AreaLoader/AreaLoader';\nimport { updateAllProductsBrands } from '../../../store/ProductSlice';\nimport { brandFormValidator } from '../../../utils/validators';\n\nconst INIT_INPUT = {\n  name: '',\n  description: '',\n  url: '',\n};\n\nconst Brands: React.FC = () => {\n  const { isLoading, brands, error } = useSelector((state: RootState) => state.brand);\n  const { products } = useSelector((state: RootState) => state.product);\n  const brandToBeEdited = useSelector((state: RootState) => state.brand.selectedBrand);\n  const dispatch = useDispatch<AppDispatch>();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const { input, setInput, handleChange, errors, submit, resetForm } = useForm(\n    INIT_INPUT,\n    handleSubmit,\n    brandFormValidator\n  );\n  const isPlaceholderVisible = !isLoading && !error.isError && !isFormOpen && brands?.length === 0;\n\n  const modifedBrands = brands.map((brand) => {\n    const productCount = products.filter((product) => product.brand.id === brand.id).length;\n    const discountedProductsCount = products.filter(\n      (product) => product.brand.id === brand.id && product.discount\n    ).length;\n\n    return {\n      ...brand,\n      productsCount: productCount,\n      discountedProductsCount,\n    };\n  });\n\n  useEffect(() => {\n    if (!brandToBeEdited.id) return;\n\n    setInput((prev) => ({\n      ...prev,\n      ...brandToBeEdited,\n    }));\n  }, [brandToBeEdited, setInput]);\n\n  function handleSubmit() {\n    const name = input.name.trim();\n    const description = input.description.trim();\n\n    if (brandToBeEdited.id) {\n      const updatedBrand = {\n        ...brandToBeEdited,\n        ...input,\n      };\n      dispatch(updateAllProductsBrands(updatedBrand));\n      dispatch(updateBrand(updatedBrand));\n    } else {\n      const newBrand = {\n        name,\n        description,\n      };\n\n      dispatch(createBrand(newBrand));\n    }\n\n    closeForm();\n  }\n\n  const openForm = () => {\n    setIsFormOpen(true);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n    dispatch(removeSelectedBrand());\n    resetForm();\n  };\n\n  const deleteBrandHendler = async (id: Brand['id']) => {\n    const hasProducts = modifedBrands.some((brand) => brand.id === id && brand.productsCount > 0);\n\n    if (hasProducts) {\n      dispatch(showAlert({ type: AlertType.Error, message: DELETE_BRAND_ALERT_MESSAGE }));\n\n      return;\n    }\n    dispatch(deleteBrand(id));\n  };\n\n  const editBrandHandler = (id: Brand['id']) => {\n    dispatch(selectBrand(id));\n    openForm();\n  };\n\n  return (\n    <Card>\n      <div className={classes.brand}>\n        <div className={classes.header}>\n          <h3 className={classes.title}>Производители</h3>\n\n          <IconButton onClick={openForm} isDisabled={isFormOpen || error.isError}>\n            <AddIcon />\n          </IconButton>\n        </div>\n\n        {isLoading && <AreaLoader />}\n\n        {!isLoading && error.isError && !isFormOpen && <Placeholder text={error.message} size={'32px'} />}\n\n        {isPlaceholderVisible && !error.isError && <Placeholder text={NO_BRANDS_MESSAGE} size={'32px'} />}\n\n        {isFormOpen && (\n          <SettingsForm\n            onClose={closeForm}\n            onChange={handleChange}\n            onSubmit={submit}\n            errors={errors}\n            value={input}\n            labelName={'Название бренда'}\n            labelURL={'SEO URL'}\n            namePlaceholder={'Укажите название бренда'}\n            descriptionPlaceholder={'Описание бренда'}\n          />\n        )}\n\n        {!isFormOpen && brands?.length > 0 && (\n          <SettingsList items={modifedBrands} onEdit={editBrandHandler} onDelete={deleteBrandHendler} />\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default Brands;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,QAAiC,uBAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,mBAAnC,EAAwDC,WAAxD,EAAqEC,WAArE,QAAwF,2BAAxF;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAASC,0BAAT,EAAqCC,iBAArC,QAA8D,6BAA9D;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;;AAEA,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,EADW;EAEjBC,WAAW,EAAE,EAFI;EAGjBC,GAAG,EAAE;AAHY,CAAnB;;AAMA,MAAMC,MAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM;IAAEC,SAAF;IAAaC,MAAb;IAAqBC;EAArB,IAA+B5B,WAAW,CAAE6B,KAAD,IAAsBA,KAAK,CAACC,KAA7B,CAAhD;EACA,MAAM;IAAEC;EAAF,IAAe/B,WAAW,CAAE6B,KAAD,IAAsBA,KAAK,CAACG,OAA7B,CAAhC;EACA,MAAMC,eAAe,GAAGjC,WAAW,CAAE6B,KAAD,IAAsBA,KAAK,CAACC,KAAN,CAAYI,aAAnC,CAAnC;EACA,MAAMC,QAAQ,GAAGpC,WAAW,EAA5B;EACA,MAAM,CAACqC,UAAD,EAAaC,aAAb,IAA8BvC,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM;IAAEwC,KAAF;IAASC,QAAT;IAAmBC,YAAnB;IAAiCC,MAAjC;IAAyCC,MAAzC;IAAiDC;EAAjD,IAA+DvC,OAAO,CAC1EiB,UAD0E,EAE1EuB,YAF0E,EAG1ExB,kBAH0E,CAA5E;EAKA,MAAMyB,oBAAoB,GAAG,CAACnB,SAAD,IAAc,CAACE,KAAK,CAACkB,OAArB,IAAgC,CAACV,UAAjC,IAA+C,CAAAT,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEoB,MAAR,MAAmB,CAA/F;EAEA,MAAMC,aAAa,GAAGrB,MAAM,CAACsB,GAAP,CAAYnB,KAAD,IAAW;IAC1C,MAAMoB,YAAY,GAAGnB,QAAQ,CAACoB,MAAT,CAAiBnB,OAAD,IAAaA,OAAO,CAACF,KAAR,CAAcsB,EAAd,KAAqBtB,KAAK,CAACsB,EAAxD,EAA4DL,MAAjF;IACA,MAAMM,uBAAuB,GAAGtB,QAAQ,CAACoB,MAAT,CAC7BnB,OAAD,IAAaA,OAAO,CAACF,KAAR,CAAcsB,EAAd,KAAqBtB,KAAK,CAACsB,EAA3B,IAAiCpB,OAAO,CAACsB,QADxB,EAE9BP,MAFF;IAIA,OAAO,EACL,GAAGjB,KADE;MAELyB,aAAa,EAAEL,YAFV;MAGLG;IAHK,CAAP;EAKD,CAXqB,CAAtB;EAaAxD,SAAS,CAAC,MAAM;IACd,IAAI,CAACoC,eAAe,CAACmB,EAArB,EAAyB;IAEzBb,QAAQ,CAAEiB,IAAD,KAAW,EAClB,GAAGA,IADe;MAElB,GAAGvB;IAFe,CAAX,CAAD,CAAR;EAID,CAPQ,EAON,CAACA,eAAD,EAAkBM,QAAlB,CAPM,CAAT;;EASA,SAASK,YAAT,GAAwB;IACtB,MAAMtB,IAAI,GAAGgB,KAAK,CAAChB,IAAN,CAAWmC,IAAX,EAAb;IACA,MAAMlC,WAAW,GAAGe,KAAK,CAACf,WAAN,CAAkBkC,IAAlB,EAApB;;IAEA,IAAIxB,eAAe,CAACmB,EAApB,EAAwB;MACtB,MAAMM,YAAY,GAAG,EACnB,GAAGzB,eADgB;QAEnB,GAAGK;MAFgB,CAArB;MAIAH,QAAQ,CAAChB,uBAAuB,CAACuC,YAAD,CAAxB,CAAR;MACAvB,QAAQ,CAACvB,WAAW,CAAC8C,YAAD,CAAZ,CAAR;IACD,CAPD,MAOO;MACL,MAAMC,QAAQ,GAAG;QACfrC,IADe;QAEfC;MAFe,CAAjB;MAKAY,QAAQ,CAAC3B,WAAW,CAACmD,QAAD,CAAZ,CAAR;IACD;;IAEDC,SAAS;EACV;;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrBxB,aAAa,CAAC,IAAD,CAAb;EACD,CAFD;;EAIA,MAAMuB,SAAS,GAAG,MAAM;IACtBvB,aAAa,CAAC,KAAD,CAAb;IACAF,QAAQ,CAACzB,mBAAmB,EAApB,CAAR;IACAiC,SAAS;EACV,CAJD;;EAMA,MAAMmB,kBAAkB,GAAG,MAAOV,EAAP,IAA2B;IACpD,MAAMW,WAAW,GAAGf,aAAa,CAACgB,IAAd,CAAoBlC,KAAD,IAAWA,KAAK,CAACsB,EAAN,KAAaA,EAAb,IAAmBtB,KAAK,CAACyB,aAAN,GAAsB,CAAvE,CAApB;;IAEA,IAAIQ,WAAJ,EAAiB;MACf5B,QAAQ,CAACpB,SAAS,CAAC;QAAEkD,IAAI,EAAE3D,SAAS,CAAC4D,KAAlB;QAAyBC,OAAO,EAAEnD;MAAlC,CAAD,CAAV,CAAR;MAEA;IACD;;IACDmB,QAAQ,CAAC1B,WAAW,CAAC2C,EAAD,CAAZ,CAAR;EACD,CATD;;EAWA,MAAMgB,gBAAgB,GAAIhB,EAAD,IAAqB;IAC5CjB,QAAQ,CAACxB,WAAW,CAACyC,EAAD,CAAZ,CAAR;IACAS,QAAQ;EACT,CAHD;;EAKA,oBACE,QAAC,IAAD;IAAA,uBACE;MAAK,SAAS,EAAE5D,OAAO,CAAC6B,KAAxB;MAAA,wBACE;QAAK,SAAS,EAAE7B,OAAO,CAACoE,MAAxB;QAAA,wBACE;UAAI,SAAS,EAAEpE,OAAO,CAACqE,KAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAGE,QAAC,UAAD;UAAY,OAAO,EAAET,QAArB;UAA+B,UAAU,EAAEzB,UAAU,IAAIR,KAAK,CAACkB,OAA/D;UAAA,uBACE,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EASGpB,SAAS,iBAAI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAThB,EAWG,CAACA,SAAD,IAAcE,KAAK,CAACkB,OAApB,IAA+B,CAACV,UAAhC,iBAA8C,QAAC,WAAD;QAAa,IAAI,EAAER,KAAK,CAACuC,OAAzB;QAAkC,IAAI,EAAE;MAAxC;QAAA;QAAA;QAAA;MAAA,QAXjD,EAaGtB,oBAAoB,IAAI,CAACjB,KAAK,CAACkB,OAA/B,iBAA0C,QAAC,WAAD;QAAa,IAAI,EAAE7B,iBAAnB;QAAsC,IAAI,EAAE;MAA5C;QAAA;QAAA;QAAA;MAAA,QAb7C,EAeGmB,UAAU,iBACT,QAAC,YAAD;QACE,OAAO,EAAEwB,SADX;QAEE,QAAQ,EAAEpB,YAFZ;QAGE,QAAQ,EAAEE,MAHZ;QAIE,MAAM,EAAED,MAJV;QAKE,KAAK,EAAEH,KALT;QAME,SAAS,EAAE,iBANb;QAOE,QAAQ,EAAE,SAPZ;QAQE,eAAe,EAAE,yBARnB;QASE,sBAAsB,EAAE;MAT1B;QAAA;QAAA;QAAA;MAAA,QAhBJ,EA6BG,CAACF,UAAD,IAAe,CAAAT,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEoB,MAAR,IAAiB,CAAhC,iBACC,QAAC,YAAD;QAAc,KAAK,EAAEC,aAArB;QAAoC,MAAM,EAAEoB,gBAA5C;QAA8D,QAAQ,EAAEN;MAAxE;QAAA;QAAA;QAAA;MAAA,QA9BJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD,CAzHD;;GAAMrC,M;UACiCzB,W,EAChBA,W,EACGA,W,EACPD,W,EAEoDK,O;;;KANjEqB,M;AA2HN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}